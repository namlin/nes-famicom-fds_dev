# ld65 Linker configuration for iNES (emulator) ROM files.

# Written by Greg M. Krsak <greg.krsak@gmail.com>, 2018

# ==============================================================================
# This defines what types of memory exist in our environment, whether or not
# it's read-write (rw) or read-only (ro). Our NES ROM file will be composed of a
# header (HDR), code (PRG), and data (CHR). Obviously, the resulting ROM will
# not include the read-write (RAM) sections of memory that are available to the
# CPU.
#
# Reference:
# - Forum user "koitsu" via https://forums.nesdev.com/viewtopic.php?f=2&t=9896
# ==============================================================================

MEMORY {
    ZEROPAGE:
      start = $00,
      size = $100,
      type = rw;
    RAM:
      start = $0200,
      size = $600,
      type = rw;
    HDR:
      start = $0000,
      size = $10,
      type = ro,
      file = "bin/first_nes_hdr.bin",
      fill = yes,
      fillval = $00;
    PRG0:
      start = $C000,
      size = $4000,
      type = ro,
      file = "bin/first_nes_prg.bin",
      fill = yes,
      fillval = $FF;
    CHR0:
      start = $0000,
      size = $2000,
      type = ro,
      file = "bin/first_nes_chr.bin",
      fill = yes,
      fillval = $00;
}


# ==============================================================================
# The linker (ld65) uses this to organize the code within the relevant output
# binary. The order of the segments here matters.
# ==============================================================================

SEGMENTS {
   ZEROPAGE:  load = ZEROPAGE,  type = zp;
   BSS:       load = RAM,       type = bss, align = $100, define = yes;
   HEADER:    load = HDR,       type = ro,  align = $10;

   CODE:      load = PRG0,      type = ro,  start = $C000;
   PALETTE:   load = PRG0,      type = ro,  start = $E000;
   SPRITES:   load = PRG0,      type = ro,  start = $E020;
   VECTORS:   load = PRG0,      type = ro,  start = $FFFA;
   TILES:     load = CHR0,      type = ro,  define = no;
}


# ==============================================================================
# Then, combined, these output binaries make the NES ROM file.
# ==============================================================================

FILES {
   "bin/first_nes_hdr.bin": format = bin;
   "bin/first_nes_prg.bin": format = bin;
   "bin/first_nes_chr.bin": format = bin;
}
